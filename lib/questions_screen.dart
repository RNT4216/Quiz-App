import 'package:flutter/material.dart';
import 'package:quiz_app/answers_button.dart';
import 'package:quiz_app/data/questions.dart';
import 'package:google_fonts/google_fonts.dart';

class QuestionsScreen extends StatefulWidget {
  const QuestionsScreen({
    required this.onSelectAnswer,
    super.key,
  });

  // For function to be executed in question screen widgets, we have to add new final
  // variable of type void function that actually does take argument
  final void Function(String answer) onSelectAnswer;

  @override
  State<QuestionsScreen> createState() {
    return _QuestionScreenState();
  }
}

class _QuestionScreenState extends State<QuestionsScreen> {
  var currentQuestionIndex = 0;

  void answerQuestion(String selectedAnswer) {
    // TO access the upper widgets class and its properties from this state
    // class we need to add the following code

    widget.onSelectAnswer(selectedAnswer);
    setState(() {
      currentQuestionIndex++;
    });
  }

  @override
  Widget build(context) {
    final currentQuestion = questions[currentQuestionIndex];
    // sizedBox is used for putting the component in the conter or helps
    // in taking the center stage instead of using the 'center' widgets
    return SizedBox(
      width: double.infinity, // This will take as much width available
      child: Container(
        margin: const EdgeInsets.all(40),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Text(
              currentQuestion.text,
              style: GoogleFonts.lato(
                color: const Color.fromARGB(255, 201, 153, 251),
                fontSize: 20,
                fontWeight: FontWeight.bold,
              ),
              textAlign: TextAlign.center,
            ),

            const SizedBox(height: 30),
            // 'map' allows you to convert or to say transform value inthe list to another value
            // The function which we pass to map will be automatically executed by Dart for every list items
            // "Children" just want a list of widget, inside of it we are creating another list though, a
            // nested list, which it didn't want.
            // 'map()' yeilds an iterable. A list inside a list
            // 'map()' doesn't change the original list

            // to solve that problem, we have to do spreading
            // we have to spread this iterable or list generated by map() into couple of individual values
            // and that is done by adding three dots(...)[which is a built-in keyword in dart]
            // infront of that code used for mapping
            ...currentQuestion.getShuffledAnswers().map((answer) {
              return AnswerButton(
                answerText: answer,
                onTap: () {
                  answerQuestion(answer);
                },
              );
            }),
            // shuffle is used, to shuffle the answers. and unlike map shuffle
            // does change the original list

            // The three dots will simply take all the values in a list or
            // iterable and pull them out of that list  or iterable and
            //place them as comma seperated value

            // AnswerButton(answerText: currentQuestion.answers[0], onTap: () {}),
            // const SizedBox(height: 10),
            // AnswerButton(answerText: currentQuestion.answers[1], onTap: () {}),
            // const SizedBox(height: 10),
            // AnswerButton(answerText: currentQuestion.answers[2], onTap: () {}),
            // const SizedBox(height: 10),
            // AnswerButton(answerText: currentQuestion.answers[3], onTap: () {}),
          ],
        ),
      ),
    );
  }
}
